{"version":3,"file":"slot-machine.js","names":["SlotMachine","container","reels","callback","options","self","REEL_SEGMENT_TOTAL","defaults","reelHeight","reelWidth","reelOffset","slotYAxis","animSpeed","sounds","reelsBegin","reelsEnd","rngFunc","Math","random","Object","assign","length","initGame","Error","createDisplayElm","createSlotElm","div","document","createElement","classList","add","i","elm","style","transform","appendChild","addEventListener","spinReels","forEach","reel","createReelElm","symbols","position","config","startPos","createStripElm","stripHeight","getStripHeight","stripWidth","getStripWidth","segmentDeg","transZ","trunc","tan","PI","marginTop","ul","height","width","li","append","toString","imgPosY","getImagePosY","rotateX","background","imageSrc","selectRandSymbol","totalWeight","symbolTotal","symbol","weight","randNum","getRandom","j","payLine","push","Array","prototype","apply","arguments","timer","window","setTimeout","isAnimating","clearTimeout","playSound","selected","element","remove","toggle","childNodes","index","backgroundPositionY","replace","getRandomInt","min","max","minNum","ceil","maxNum","floor","abs","url","audio","Audio","src","onerror","console","warn","play","dispatch","func","call","slotMachine","module","exports"],"sources":["../src/slot-machine.js"],"sourcesContent":["/**\r\n *  Slot Machine Generator\r\n *  Create an extremely biased, web-based slot machine game.\r\n *\r\n *  Copyright 2020-2023, Marc S. Brooks (https://mbrooks.info)\r\n *  Licensed under the MIT license:\r\n *  http://www.opensource.org/licenses/mit-license.php\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * @param {Element} container\r\n *   Containing HTML element.\r\n *\r\n * @param {Array<Object>} reels\r\n *   Reel configuration.\r\n *\r\n * @param {Function} callback\r\n *   Returns selected pay-line symbols.\r\n *\r\n * @param {Object} options\r\n *   Configuration overrides (optional).\r\n */\r\nfunction SlotMachine(container, reels, callback, options) {\r\n  const self = this;\r\n\r\n  const REEL_SEGMENT_TOTAL = 24;\r\n\r\n  const defaults = {\r\n    reelHeight: 1200,\r\n    reelWidth:  200,\r\n    reelOffset: 20,\r\n    slotYAxis: 0,\r\n    animSpeed:  1000,\r\n    sounds: {\r\n      reelsBegin: null,\r\n      reelsEnd: null\r\n    },\r\n    rngFunc: function() {\r\n\r\n      // The weakest link.\r\n      return Math.random();\r\n    },\r\n  };\r\n\r\n  (function() {\r\n    self.options = Object.assign(defaults, options);\r\n\r\n    if (reels.length > 0) {\r\n      initGame();\r\n    } else {\r\n      throw new Error('Failed to initialize (missing reels)');\r\n    }\r\n  })();\r\n\r\n  /**\r\n   * Initialize a new game instance.\r\n   */\r\n  function initGame() {\r\n    createDisplayElm();\r\n    createSlotElm();\r\n  }\r\n\r\n  /**\r\n   * Create display elements.\r\n   */\r\n  function createDisplayElm() {\r\n    const div = document.createElement('div');\r\n    div.classList.add('display');\r\n\r\n    for (let i = 0; i < reels.length; i++) {\r\n      const elm = document.createElement('div');\r\n      elm.style.transform = `rotateY(${self.options.slotYAxis}deg)`;\r\n      elm.classList.add('reel');\r\n\r\n      div.appendChild(elm);\r\n    }\r\n\r\n    div.addEventListener('click', () => spinReels());\r\n\r\n    container.appendChild(div);\r\n  }\r\n\r\n  /**\r\n   * Create slot elements.\r\n   */\r\n  function createSlotElm() {\r\n    const div = document.createElement('div');\r\n    div.classList.add('slots');\r\n\r\n    reels.forEach(reel => {\r\n      const elm = createReelElm(reel, reel.symbols[0].position);\r\n\r\n      div.appendChild(elm);\r\n    });\r\n\r\n    container.appendChild(div);\r\n  }\r\n\r\n  /**\r\n   * Create reel elements.\r\n   *\r\n   * @param {Object} config\r\n   *   Config options.\r\n   *\r\n   * @param {Number} startPos\r\n   *   Start position.\r\n   *\r\n   * @return {Element}\r\n   */\r\n  function createReelElm(config, startPos = 0) {\r\n    const div = document.createElement('div');\r\n    div.style.transform = `rotateY(${self.options.slotYAxis}deg)`;\r\n    div.classList.add('reel');\r\n\r\n    const elm = createStripElm(config, config.symbols[0].position);\r\n\r\n    config['element'] = elm;\r\n\r\n    div.appendChild(elm);\r\n\r\n    return div;\r\n  }\r\n\r\n  /**\r\n   * Create strip elements (faux-panoramic animation).\r\n   *\r\n   * @param {Object} config\r\n   *   Config options.\r\n   *\r\n   * @param {Number} startPos\r\n   *   Start position.\r\n   *\r\n   * @return {Element}\r\n   */\r\n  function createStripElm(config, startPos = 0) {\r\n    const stripHeight = getStripHeight();\r\n    const stripWidth  = getStripWidth();\r\n\r\n    const segmentDeg = 360 / REEL_SEGMENT_TOTAL;\r\n\r\n    const transZ = Math.trunc(\r\n      Math.tan(90 / Math.PI - segmentDeg) * (stripHeight * 0.5) * 4\r\n    );\r\n\r\n    const marginTop = transZ + stripHeight / 2;\r\n\r\n    const ul = document.createElement('ul');\r\n    ul.style.height    = stripHeight + 'px';\r\n    ul.style.marginTop = marginTop   + 'px';\r\n    ul.style.width     = stripWidth  + 'px';\r\n    ul.classList.add('strip');\r\n\r\n    for (let i = 0; i < REEL_SEGMENT_TOTAL; i++) {\r\n      const li = document.createElement('li');\r\n      li.append(i.toString());\r\n\r\n      const imgPosY = getImagePosY(i, startPos);\r\n      const rotateX = (REEL_SEGMENT_TOTAL * segmentDeg) - (i * segmentDeg);\r\n\r\n      // Position image per the strip angle/container radius.\r\n      li.style.background = `url(${config.imageSrc}) 0 ${imgPosY}px`;\r\n      li.style.height     = stripHeight + 'px';\r\n      li.style.width      = stripWidth  + 'px';\r\n      li.style.transform  = `rotateX(${rotateX}deg) translateZ(${transZ}px)`;\r\n\r\n      ul.appendChild(li);\r\n    }\r\n\r\n    return ul;\r\n  }\r\n\r\n  /**\r\n   * Select a random symbol by weight.\r\n   *\r\n   * @param {Array<Object>} symbols\r\n   *   List of symbols.\r\n   *\r\n   * @return {Object}\r\n   */\r\n  function selectRandSymbol(symbols) {\r\n    let totalWeight = 0;\r\n\r\n    const symbolTotal = symbols.length;\r\n\r\n    for (let i = 0; i < symbolTotal; i++) {\r\n      const symbol = symbols[i];\r\n      const weight = symbol.weight;\r\n\r\n      totalWeight += weight;\r\n    }\r\n\r\n    let randNum = getRandom() * totalWeight;\r\n\r\n    for (let j = 0; j < symbolTotal; j++) {\r\n      const symbol = symbols[j];\r\n      const weight = symbol.weight;\r\n\r\n      if (randNum < weight) {\r\n        return symbol;\r\n      }\r\n\r\n      randNum -= weight;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Spin the reels and try your luck.\r\n   */\r\n  function spinReels() {\r\n    const payLine = [];\r\n\r\n    if (callback) {\r\n\r\n      // Delay callback until animations have stopped.\r\n      payLine.push = function() {\r\n        Array.prototype.push.apply(this, arguments);\r\n\r\n        if (payLine.length === reels.length) {\r\n          const timer = window.setTimeout(() => {\r\n            self.isAnimating = false;\r\n\r\n            callback(payLine);\r\n\r\n            window.clearTimeout(timer);\r\n          }, self.options.animSpeed);\r\n        }\r\n      };\r\n    }\r\n\r\n    playSound(self.options.sounds.reelsBegin);\r\n\r\n    reels.forEach(reel => {\r\n      const selected = selectRandSymbol(reel.symbols);\r\n      const startPos = selected.position;\r\n\r\n      // Start the rotation animation.\r\n      const elm = reel.element;\r\n      elm.classList.remove('stop');\r\n      elm.classList.toggle('spin');\r\n\r\n      // Shift images to select position.\r\n      elm.childNodes.forEach((li, index) => {\r\n        li.style.backgroundPositionY = getImagePosY(index, startPos) + 'px';\r\n      });\r\n\r\n      // Randomly stop rotation animation.\r\n      const timer = window.setTimeout(() => {\r\n        elm.classList.replace('spin', 'stop');\r\n\r\n        playSound(self.options.sounds.reelsEnd);\r\n\r\n        payLine.push(selected);\r\n\r\n        window.clearTimeout(timer);\r\n      }, self.options.animSpeed * getRandomInt(1, 4));\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get random number between 0 (inclusive) and 1 (exclusive).\r\n   *\r\n   * @return {number}\r\n   */\r\n  function getRandom() {\r\n    return self.options.rngFunc();\r\n  }\r\n\r\n  /**\r\n   * Get random integer between two values.\r\n   *\r\n   * @param {Number} min\r\n   *   Minimum value (default: 0).\r\n   *\r\n   * @param {Number} max\r\n   *   Maximum value (default: 10).\r\n   *\r\n   * @return {Number}\r\n   */\r\n  function getRandomInt(min = 1, max = 10) {\r\n    const minNum = Math.ceil(min);\r\n    const maxNum = Math.floor(max);\r\n\r\n    return Math.floor(getRandom() * (Math.floor(maxNum) - minNum)) + minNum;\r\n  }\r\n\r\n  /**\r\n   * Calculate the strip background position.\r\n   *\r\n   * @param {Number} index\r\n   *   Strip symbol index.\r\n   *\r\n   * @param {Number} position\r\n   *   Strip target position.\r\n   *\r\n   * @return {Number}\r\n   */\r\n  function getImagePosY(index, position) {\r\n    return -Math.abs(\r\n      (getStripHeight() * index) + (position - self.options.reelOffset)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Calculate the strip height.\r\n   *\r\n   * @return {Number}\r\n   */\r\n  function getStripHeight() {\r\n    return self.options.reelHeight / REEL_SEGMENT_TOTAL;\r\n  }\r\n\r\n  /**\r\n   * Calculate the strip width.\r\n   *\r\n   * @return {Number}\r\n   */\r\n  function getStripWidth() {\r\n    return self.options.reelWidth;\r\n  }\r\n\r\n  /**\r\n   * Play the audio clip.\r\n   *\r\n   * @param {String} url\r\n   *  Audio file URL.\r\n   */\r\n  function playSound(url) {\r\n    if (url) {\r\n      const audio = new Audio();\r\n      audio.src = url;\r\n      audio.onerror = () => console.warn(`Failed to load audio: ${url}`);\r\n      audio.play();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Dispatch game actions.\r\n   *\r\n   * @param {Function} func\r\n   *   Function to execute.\r\n   */\r\n  function dispatch(func) {\r\n    if (!self.isAnimating) {\r\n      self.isAnimating = true;\r\n\r\n      func.call(self);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Protected members.\r\n   */\r\n  this.play = function() {\r\n    dispatch(spinReels);\r\n  };\r\n}\r\n\r\n/**\r\n * Set global/exportable instance, where supported.\r\n */\r\nwindow.slotMachine = function(container, reels, callback, options) {\r\n  return new SlotMachine(container, reels, callback, options);\r\n};\r\n\r\nif (typeof module !== 'undefined' && module.exports) {\r\n  module.exports = SlotMachine;\r\n}\r\n"],"mappings":"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","ignoreList":[]}